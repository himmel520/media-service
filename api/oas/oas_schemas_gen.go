// Code generated by ogen, DO NOT EDIT.

package api

import (
	"fmt"
	"net/url"

	"github.com/go-faster/errors"
	"github.com/go-faster/jx"
)

func (s *ErrorStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

// Ref: #
type Ad struct {
	// Идентификатор рекламы.
	ID    OptInt   `json:"id"`
	Image OptImage `json:"image"`
	Color OptColor `json:"color"`
	Tg    OptTg    `json:"tg"`
	// Должность, связанная с рекламой.
	Post OptString `json:"post"`
	// Заголовок рекламы.
	Title OptString `json:"title"`
	// Описание рекламы.
	Description OptString `json:"description"`
	// Приоритет рекламы.
	Priority OptAdPriority `json:"priority"`
}

// GetID returns the value of ID.
func (s *Ad) GetID() OptInt {
	return s.ID
}

// GetImage returns the value of Image.
func (s *Ad) GetImage() OptImage {
	return s.Image
}

// GetColor returns the value of Color.
func (s *Ad) GetColor() OptColor {
	return s.Color
}

// GetTg returns the value of Tg.
func (s *Ad) GetTg() OptTg {
	return s.Tg
}

// GetPost returns the value of Post.
func (s *Ad) GetPost() OptString {
	return s.Post
}

// GetTitle returns the value of Title.
func (s *Ad) GetTitle() OptString {
	return s.Title
}

// GetDescription returns the value of Description.
func (s *Ad) GetDescription() OptString {
	return s.Description
}

// GetPriority returns the value of Priority.
func (s *Ad) GetPriority() OptAdPriority {
	return s.Priority
}

// SetID sets the value of ID.
func (s *Ad) SetID(val OptInt) {
	s.ID = val
}

// SetImage sets the value of Image.
func (s *Ad) SetImage(val OptImage) {
	s.Image = val
}

// SetColor sets the value of Color.
func (s *Ad) SetColor(val OptColor) {
	s.Color = val
}

// SetTg sets the value of Tg.
func (s *Ad) SetTg(val OptTg) {
	s.Tg = val
}

// SetPost sets the value of Post.
func (s *Ad) SetPost(val OptString) {
	s.Post = val
}

// SetTitle sets the value of Title.
func (s *Ad) SetTitle(val OptString) {
	s.Title = val
}

// SetDescription sets the value of Description.
func (s *Ad) SetDescription(val OptString) {
	s.Description = val
}

// SetPriority sets the value of Priority.
func (s *Ad) SetPriority(val OptAdPriority) {
	s.Priority = val
}

func (*Ad) v1AdminAdsIDPutRes() {}
func (*Ad) v1AdminAdsPostRes()  {}

// Ref: #
type AdPost struct {
	// Должность, связанная с рекламой.
	Post string `json:"post"`
	// Идентификатор изображения.
	ImagesID int `json:"images_id"`
	// Идентификатор цвета.
	ColorsID int `json:"colors_id"`
	// Идентификатор тега.
	TgID int `json:"tg_id"`
	// Заголовок рекламы.
	Title string `json:"title"`
	// Описание рекламы.
	Description string `json:"description"`
	// Приоритет рекламы.
	Priority AdPostPriority `json:"priority"`
}

// GetPost returns the value of Post.
func (s *AdPost) GetPost() string {
	return s.Post
}

// GetImagesID returns the value of ImagesID.
func (s *AdPost) GetImagesID() int {
	return s.ImagesID
}

// GetColorsID returns the value of ColorsID.
func (s *AdPost) GetColorsID() int {
	return s.ColorsID
}

// GetTgID returns the value of TgID.
func (s *AdPost) GetTgID() int {
	return s.TgID
}

// GetTitle returns the value of Title.
func (s *AdPost) GetTitle() string {
	return s.Title
}

// GetDescription returns the value of Description.
func (s *AdPost) GetDescription() string {
	return s.Description
}

// GetPriority returns the value of Priority.
func (s *AdPost) GetPriority() AdPostPriority {
	return s.Priority
}

// SetPost sets the value of Post.
func (s *AdPost) SetPost(val string) {
	s.Post = val
}

// SetImagesID sets the value of ImagesID.
func (s *AdPost) SetImagesID(val int) {
	s.ImagesID = val
}

// SetColorsID sets the value of ColorsID.
func (s *AdPost) SetColorsID(val int) {
	s.ColorsID = val
}

// SetTgID sets the value of TgID.
func (s *AdPost) SetTgID(val int) {
	s.TgID = val
}

// SetTitle sets the value of Title.
func (s *AdPost) SetTitle(val string) {
	s.Title = val
}

// SetDescription sets the value of Description.
func (s *AdPost) SetDescription(val string) {
	s.Description = val
}

// SetPriority sets the value of Priority.
func (s *AdPost) SetPriority(val AdPostPriority) {
	s.Priority = val
}

// Приоритет рекламы.
type AdPostPriority int

const (
	AdPostPriority1 AdPostPriority = 1
	AdPostPriority2 AdPostPriority = 2
	AdPostPriority3 AdPostPriority = 3
)

// AllValues returns all AdPostPriority values.
func (AdPostPriority) AllValues() []AdPostPriority {
	return []AdPostPriority{
		AdPostPriority1,
		AdPostPriority2,
		AdPostPriority3,
	}
}

// Приоритет рекламы.
type AdPriority int

const (
	AdPriority1 AdPriority = 1
	AdPriority2 AdPriority = 2
	AdPriority3 AdPriority = 3
)

// AllValues returns all AdPriority values.
func (AdPriority) AllValues() []AdPriority {
	return []AdPriority{
		AdPriority1,
		AdPriority2,
		AdPriority3,
	}
}

// Ref: #
type AdPut struct {
	// Должность, связанная с рекламой.
	Post OptString `json:"post"`
	// Идентификатор изображения.
	ImagesID OptInt `json:"images_id"`
	// Идентификатор цвета.
	ColorsID OptInt `json:"colors_id"`
	// Идентификатор тега.
	TgID OptInt `json:"tg_id"`
	// Заголовок рекламы.
	Title OptString `json:"title"`
	// Описание рекламы.
	Description OptString `json:"description"`
	// Приоритет рекламы.
	Priority OptAdPutPriority `json:"priority"`
}

// GetPost returns the value of Post.
func (s *AdPut) GetPost() OptString {
	return s.Post
}

// GetImagesID returns the value of ImagesID.
func (s *AdPut) GetImagesID() OptInt {
	return s.ImagesID
}

// GetColorsID returns the value of ColorsID.
func (s *AdPut) GetColorsID() OptInt {
	return s.ColorsID
}

// GetTgID returns the value of TgID.
func (s *AdPut) GetTgID() OptInt {
	return s.TgID
}

// GetTitle returns the value of Title.
func (s *AdPut) GetTitle() OptString {
	return s.Title
}

// GetDescription returns the value of Description.
func (s *AdPut) GetDescription() OptString {
	return s.Description
}

// GetPriority returns the value of Priority.
func (s *AdPut) GetPriority() OptAdPutPriority {
	return s.Priority
}

// SetPost sets the value of Post.
func (s *AdPut) SetPost(val OptString) {
	s.Post = val
}

// SetImagesID sets the value of ImagesID.
func (s *AdPut) SetImagesID(val OptInt) {
	s.ImagesID = val
}

// SetColorsID sets the value of ColorsID.
func (s *AdPut) SetColorsID(val OptInt) {
	s.ColorsID = val
}

// SetTgID sets the value of TgID.
func (s *AdPut) SetTgID(val OptInt) {
	s.TgID = val
}

// SetTitle sets the value of Title.
func (s *AdPut) SetTitle(val OptString) {
	s.Title = val
}

// SetDescription sets the value of Description.
func (s *AdPut) SetDescription(val OptString) {
	s.Description = val
}

// SetPriority sets the value of Priority.
func (s *AdPut) SetPriority(val OptAdPutPriority) {
	s.Priority = val
}

// Приоритет рекламы.
type AdPutPriority int

const (
	AdPutPriority1 AdPutPriority = 1
	AdPutPriority2 AdPutPriority = 2
	AdPutPriority3 AdPutPriority = 3
)

// AllValues returns all AdPutPriority values.
func (AdPutPriority) AllValues() []AdPutPriority {
	return []AdPutPriority{
		AdPutPriority1,
		AdPutPriority2,
		AdPutPriority3,
	}
}

type AdminBearerAuth struct {
	Token string
}

// GetToken returns the value of Token.
func (s *AdminBearerAuth) GetToken() string {
	return s.Token
}

// SetToken sets the value of Token.
func (s *AdminBearerAuth) SetToken(val string) {
	s.Token = val
}

type Ads []Ad

func (*Ads) v1AdsGetRes() {}

// Ref: #
type AdsResp struct {
	Data []Ad `json:"data"`
	// Текущая страница.
	Page OptInt `json:"page"`
	// Количество страниц.
	Pages OptInt `json:"pages"`
	// Количество записей на странице.
	PerPage OptInt `json:"per_page"`
}

// GetData returns the value of Data.
func (s *AdsResp) GetData() []Ad {
	return s.Data
}

// GetPage returns the value of Page.
func (s *AdsResp) GetPage() OptInt {
	return s.Page
}

// GetPages returns the value of Pages.
func (s *AdsResp) GetPages() OptInt {
	return s.Pages
}

// GetPerPage returns the value of PerPage.
func (s *AdsResp) GetPerPage() OptInt {
	return s.PerPage
}

// SetData sets the value of Data.
func (s *AdsResp) SetData(val []Ad) {
	s.Data = val
}

// SetPage sets the value of Page.
func (s *AdsResp) SetPage(val OptInt) {
	s.Page = val
}

// SetPages sets the value of Pages.
func (s *AdsResp) SetPages(val OptInt) {
	s.Pages = val
}

// SetPerPage sets the value of PerPage.
func (s *AdsResp) SetPerPage(val OptInt) {
	s.PerPage = val
}

func (*AdsResp) v1AdminAdsGetRes() {}

// Ref: #
type Color struct {
	// Идентификатор цвета.
	ID int `json:"id"`
	// Название цвета.
	Title string `json:"title"`
	// HEX код цвета.
	Hex string `json:"hex"`
}

// GetID returns the value of ID.
func (s *Color) GetID() int {
	return s.ID
}

// GetTitle returns the value of Title.
func (s *Color) GetTitle() string {
	return s.Title
}

// GetHex returns the value of Hex.
func (s *Color) GetHex() string {
	return s.Hex
}

// SetID sets the value of ID.
func (s *Color) SetID(val int) {
	s.ID = val
}

// SetTitle sets the value of Title.
func (s *Color) SetTitle(val string) {
	s.Title = val
}

// SetHex sets the value of Hex.
func (s *Color) SetHex(val string) {
	s.Hex = val
}

func (*Color) v1AdminColorsIDPutRes() {}
func (*Color) v1AdminColorsPostRes()  {}

// Ref: #
type ColorPost struct {
	// Название цвета.
	Title string `json:"title"`
	// HEX код цвета.
	Hex string `json:"hex"`
}

// GetTitle returns the value of Title.
func (s *ColorPost) GetTitle() string {
	return s.Title
}

// GetHex returns the value of Hex.
func (s *ColorPost) GetHex() string {
	return s.Hex
}

// SetTitle sets the value of Title.
func (s *ColorPost) SetTitle(val string) {
	s.Title = val
}

// SetHex sets the value of Hex.
func (s *ColorPost) SetHex(val string) {
	s.Hex = val
}

// Ref: #
type ColorPut struct {
	// Название цвета.
	Title OptString `json:"title"`
	// HEX код цвета.
	Hex OptString `json:"hex"`
}

// GetTitle returns the value of Title.
func (s *ColorPut) GetTitle() OptString {
	return s.Title
}

// GetHex returns the value of Hex.
func (s *ColorPut) GetHex() OptString {
	return s.Hex
}

// SetTitle sets the value of Title.
func (s *ColorPut) SetTitle(val OptString) {
	s.Title = val
}

// SetHex sets the value of Hex.
func (s *ColorPut) SetHex(val OptString) {
	s.Hex = val
}

// Ref: #
type ColorsResp struct {
	Data []Color `json:"data"`
	// Текущая страница.
	Page int `json:"page"`
	// Количество страниц.
	Pages int `json:"pages"`
	// Количество записей на странице.
	PerPage int `json:"per_page"`
}

// GetData returns the value of Data.
func (s *ColorsResp) GetData() []Color {
	return s.Data
}

// GetPage returns the value of Page.
func (s *ColorsResp) GetPage() int {
	return s.Page
}

// GetPages returns the value of Pages.
func (s *ColorsResp) GetPages() int {
	return s.Pages
}

// GetPerPage returns the value of PerPage.
func (s *ColorsResp) GetPerPage() int {
	return s.PerPage
}

// SetData sets the value of Data.
func (s *ColorsResp) SetData(val []Color) {
	s.Data = val
}

// SetPage sets the value of Page.
func (s *ColorsResp) SetPage(val int) {
	s.Page = val
}

// SetPages sets the value of Pages.
func (s *ColorsResp) SetPages(val int) {
	s.Pages = val
}

// SetPerPage sets the value of PerPage.
func (s *ColorsResp) SetPerPage(val int) {
	s.PerPage = val
}

func (*ColorsResp) v1AdminColorsGetRes() {}

// Ref: #
type Error struct {
	// Error message.
	Message string       `json:"message"`
	Details ErrorDetails `json:"details"`
}

// GetMessage returns the value of Message.
func (s *Error) GetMessage() string {
	return s.Message
}

// GetDetails returns the value of Details.
func (s *Error) GetDetails() ErrorDetails {
	return s.Details
}

// SetMessage sets the value of Message.
func (s *Error) SetMessage(val string) {
	s.Message = val
}

// SetDetails sets the value of Details.
func (s *Error) SetDetails(val ErrorDetails) {
	s.Details = val
}

type ErrorDetails map[string]jx.Raw

func (s *ErrorDetails) init() ErrorDetails {
	m := *s
	if m == nil {
		m = map[string]jx.Raw{}
		*s = m
	}
	return m
}

// ErrorStatusCode wraps Error with StatusCode.
type ErrorStatusCode struct {
	StatusCode int
	Response   Error
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrorStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrorStatusCode) GetResponse() Error {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrorStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrorStatusCode) SetResponse(val Error) {
	s.Response = val
}

// Ref: #
type Image struct {
	// Идентификатор изображения.
	ID int `json:"id"`
	// Название изображения.
	Title string `json:"title"`
	// URL изображения.
	URL url.URL `json:"url"`
	// Тип изображения (например, 'adv' или 'logo').
	Type ImageType `json:"type"`
}

// GetID returns the value of ID.
func (s *Image) GetID() int {
	return s.ID
}

// GetTitle returns the value of Title.
func (s *Image) GetTitle() string {
	return s.Title
}

// GetURL returns the value of URL.
func (s *Image) GetURL() url.URL {
	return s.URL
}

// GetType returns the value of Type.
func (s *Image) GetType() ImageType {
	return s.Type
}

// SetID sets the value of ID.
func (s *Image) SetID(val int) {
	s.ID = val
}

// SetTitle sets the value of Title.
func (s *Image) SetTitle(val string) {
	s.Title = val
}

// SetURL sets the value of URL.
func (s *Image) SetURL(val url.URL) {
	s.URL = val
}

// SetType sets the value of Type.
func (s *Image) SetType(val ImageType) {
	s.Type = val
}

func (*Image) v1AdminImagesIDPutRes() {}
func (*Image) v1AdminImagesPostRes()  {}

// Ref: #
type ImagePost struct {
	// Название изображения.
	Title string `json:"title"`
	// URL изображения.
	URL url.URL `json:"url"`
	// Тип изображения (например, 'adv' или 'logo').
	Type ImagePostType `json:"type"`
}

// GetTitle returns the value of Title.
func (s *ImagePost) GetTitle() string {
	return s.Title
}

// GetURL returns the value of URL.
func (s *ImagePost) GetURL() url.URL {
	return s.URL
}

// GetType returns the value of Type.
func (s *ImagePost) GetType() ImagePostType {
	return s.Type
}

// SetTitle sets the value of Title.
func (s *ImagePost) SetTitle(val string) {
	s.Title = val
}

// SetURL sets the value of URL.
func (s *ImagePost) SetURL(val url.URL) {
	s.URL = val
}

// SetType sets the value of Type.
func (s *ImagePost) SetType(val ImagePostType) {
	s.Type = val
}

// Тип изображения (например, 'adv' или 'logo').
type ImagePostType string

const (
	ImagePostTypeAdv  ImagePostType = "adv"
	ImagePostTypeLogo ImagePostType = "logo"
)

// AllValues returns all ImagePostType values.
func (ImagePostType) AllValues() []ImagePostType {
	return []ImagePostType{
		ImagePostTypeAdv,
		ImagePostTypeLogo,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ImagePostType) MarshalText() ([]byte, error) {
	switch s {
	case ImagePostTypeAdv:
		return []byte(s), nil
	case ImagePostTypeLogo:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ImagePostType) UnmarshalText(data []byte) error {
	switch ImagePostType(data) {
	case ImagePostTypeAdv:
		*s = ImagePostTypeAdv
		return nil
	case ImagePostTypeLogo:
		*s = ImagePostTypeLogo
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #
type ImagePut struct {
	// Название изображения.
	Title OptString `json:"title"`
	// URL изображения.
	URL OptURI `json:"url"`
	// Тип изображения (например, 'adv' или 'logo').
	Type OptImagePutType `json:"type"`
}

// GetTitle returns the value of Title.
func (s *ImagePut) GetTitle() OptString {
	return s.Title
}

// GetURL returns the value of URL.
func (s *ImagePut) GetURL() OptURI {
	return s.URL
}

// GetType returns the value of Type.
func (s *ImagePut) GetType() OptImagePutType {
	return s.Type
}

// SetTitle sets the value of Title.
func (s *ImagePut) SetTitle(val OptString) {
	s.Title = val
}

// SetURL sets the value of URL.
func (s *ImagePut) SetURL(val OptURI) {
	s.URL = val
}

// SetType sets the value of Type.
func (s *ImagePut) SetType(val OptImagePutType) {
	s.Type = val
}

// Тип изображения (например, 'adv' или 'logo').
type ImagePutType string

const (
	ImagePutTypeAdv  ImagePutType = "adv"
	ImagePutTypeLogo ImagePutType = "logo"
)

// AllValues returns all ImagePutType values.
func (ImagePutType) AllValues() []ImagePutType {
	return []ImagePutType{
		ImagePutTypeAdv,
		ImagePutTypeLogo,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ImagePutType) MarshalText() ([]byte, error) {
	switch s {
	case ImagePutTypeAdv:
		return []byte(s), nil
	case ImagePutTypeLogo:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ImagePutType) UnmarshalText(data []byte) error {
	switch ImagePutType(data) {
	case ImagePutTypeAdv:
		*s = ImagePutTypeAdv
		return nil
	case ImagePutTypeLogo:
		*s = ImagePutTypeLogo
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Тип изображения (например, 'adv' или 'logo').
type ImageType string

const (
	ImageTypeAdv  ImageType = "adv"
	ImageTypeLogo ImageType = "logo"
)

// AllValues returns all ImageType values.
func (ImageType) AllValues() []ImageType {
	return []ImageType{
		ImageTypeAdv,
		ImageTypeLogo,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ImageType) MarshalText() ([]byte, error) {
	switch s {
	case ImageTypeAdv:
		return []byte(s), nil
	case ImageTypeLogo:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ImageType) UnmarshalText(data []byte) error {
	switch ImageType(data) {
	case ImageTypeAdv:
		*s = ImageTypeAdv
		return nil
	case ImageTypeLogo:
		*s = ImageTypeLogo
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #
type ImagesResp struct {
	Data []Image `json:"data"`
	// Текущая страница.
	Page int `json:"page"`
	// Количество страниц.
	Pages int `json:"pages"`
	// Количество записей на странице.
	PerPage int `json:"per_page"`
}

// GetData returns the value of Data.
func (s *ImagesResp) GetData() []Image {
	return s.Data
}

// GetPage returns the value of Page.
func (s *ImagesResp) GetPage() int {
	return s.Page
}

// GetPages returns the value of Pages.
func (s *ImagesResp) GetPages() int {
	return s.Pages
}

// GetPerPage returns the value of PerPage.
func (s *ImagesResp) GetPerPage() int {
	return s.PerPage
}

// SetData sets the value of Data.
func (s *ImagesResp) SetData(val []Image) {
	s.Data = val
}

// SetPage sets the value of Page.
func (s *ImagesResp) SetPage(val int) {
	s.Page = val
}

// SetPages sets the value of Pages.
func (s *ImagesResp) SetPages(val int) {
	s.Pages = val
}

// SetPerPage sets the value of PerPage.
func (s *ImagesResp) SetPerPage(val int) {
	s.PerPage = val
}

func (*ImagesResp) v1AdminImagesGetRes() {}

// Ref: #
type LogosResp map[string]LogosRespItem

func (s *LogosResp) init() LogosResp {
	m := *s
	if m == nil {
		m = map[string]LogosRespItem{}
		*s = m
	}
	return m
}

func (*LogosResp) v1LogosGetRes() {}

type LogosRespItem struct {
	// Название элемента.
	Title string `json:"title"`
	// URL элемента.
	URL url.URL `json:"url"`
	// Тип элемента (например, логотип).
	Type LogosRespItemType `json:"type"`
}

// GetTitle returns the value of Title.
func (s *LogosRespItem) GetTitle() string {
	return s.Title
}

// GetURL returns the value of URL.
func (s *LogosRespItem) GetURL() url.URL {
	return s.URL
}

// GetType returns the value of Type.
func (s *LogosRespItem) GetType() LogosRespItemType {
	return s.Type
}

// SetTitle sets the value of Title.
func (s *LogosRespItem) SetTitle(val string) {
	s.Title = val
}

// SetURL sets the value of URL.
func (s *LogosRespItem) SetURL(val url.URL) {
	s.URL = val
}

// SetType sets the value of Type.
func (s *LogosRespItem) SetType(val LogosRespItemType) {
	s.Type = val
}

// Тип элемента (например, логотип).
type LogosRespItemType string

const (
	LogosRespItemTypeLogo LogosRespItemType = "logo"
)

// AllValues returns all LogosRespItemType values.
func (LogosRespItemType) AllValues() []LogosRespItemType {
	return []LogosRespItemType{
		LogosRespItemTypeLogo,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s LogosRespItemType) MarshalText() ([]byte, error) {
	switch s {
	case LogosRespItemTypeLogo:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *LogosRespItemType) UnmarshalText(data []byte) error {
	switch LogosRespItemType(data) {
	case LogosRespItemTypeLogo:
		*s = LogosRespItemTypeLogo
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// NewOptAdPriority returns new OptAdPriority with value set to v.
func NewOptAdPriority(v AdPriority) OptAdPriority {
	return OptAdPriority{
		Value: v,
		Set:   true,
	}
}

// OptAdPriority is optional AdPriority.
type OptAdPriority struct {
	Value AdPriority
	Set   bool
}

// IsSet returns true if OptAdPriority was set.
func (o OptAdPriority) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAdPriority) Reset() {
	var v AdPriority
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAdPriority) SetTo(v AdPriority) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAdPriority) Get() (v AdPriority, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAdPriority) Or(d AdPriority) AdPriority {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAdPutPriority returns new OptAdPutPriority with value set to v.
func NewOptAdPutPriority(v AdPutPriority) OptAdPutPriority {
	return OptAdPutPriority{
		Value: v,
		Set:   true,
	}
}

// OptAdPutPriority is optional AdPutPriority.
type OptAdPutPriority struct {
	Value AdPutPriority
	Set   bool
}

// IsSet returns true if OptAdPutPriority was set.
func (o OptAdPutPriority) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAdPutPriority) Reset() {
	var v AdPutPriority
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAdPutPriority) SetTo(v AdPutPriority) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAdPutPriority) Get() (v AdPutPriority, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAdPutPriority) Or(d AdPutPriority) AdPutPriority {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptColor returns new OptColor with value set to v.
func NewOptColor(v Color) OptColor {
	return OptColor{
		Value: v,
		Set:   true,
	}
}

// OptColor is optional Color.
type OptColor struct {
	Value Color
	Set   bool
}

// IsSet returns true if OptColor was set.
func (o OptColor) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptColor) Reset() {
	var v Color
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptColor) SetTo(v Color) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptColor) Get() (v Color, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptColor) Or(d Color) Color {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptImage returns new OptImage with value set to v.
func NewOptImage(v Image) OptImage {
	return OptImage{
		Value: v,
		Set:   true,
	}
}

// OptImage is optional Image.
type OptImage struct {
	Value Image
	Set   bool
}

// IsSet returns true if OptImage was set.
func (o OptImage) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptImage) Reset() {
	var v Image
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptImage) SetTo(v Image) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptImage) Get() (v Image, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptImage) Or(d Image) Image {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptImagePutType returns new OptImagePutType with value set to v.
func NewOptImagePutType(v ImagePutType) OptImagePutType {
	return OptImagePutType{
		Value: v,
		Set:   true,
	}
}

// OptImagePutType is optional ImagePutType.
type OptImagePutType struct {
	Value ImagePutType
	Set   bool
}

// IsSet returns true if OptImagePutType was set.
func (o OptImagePutType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptImagePutType) Reset() {
	var v ImagePutType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptImagePutType) SetTo(v ImagePutType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptImagePutType) Get() (v ImagePutType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptImagePutType) Or(d ImagePutType) ImagePutType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptTg returns new OptTg with value set to v.
func NewOptTg(v Tg) OptTg {
	return OptTg{
		Value: v,
		Set:   true,
	}
}

// OptTg is optional Tg.
type OptTg struct {
	Value Tg
	Set   bool
}

// IsSet returns true if OptTg was set.
func (o OptTg) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTg) Reset() {
	var v Tg
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTg) SetTo(v Tg) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTg) Get() (v Tg, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptTg) Or(d Tg) Tg {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptURI returns new OptURI with value set to v.
func NewOptURI(v url.URL) OptURI {
	return OptURI{
		Value: v,
		Set:   true,
	}
}

// OptURI is optional url.URL.
type OptURI struct {
	Value url.URL
	Set   bool
}

// IsSet returns true if OptURI was set.
func (o OptURI) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptURI) Reset() {
	var v url.URL
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptURI) SetTo(v url.URL) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptURI) Get() (v url.URL, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptURI) Or(d url.URL) url.URL {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptV1AdsGetPriority returns new OptV1AdsGetPriority with value set to v.
func NewOptV1AdsGetPriority(v V1AdsGetPriority) OptV1AdsGetPriority {
	return OptV1AdsGetPriority{
		Value: v,
		Set:   true,
	}
}

// OptV1AdsGetPriority is optional V1AdsGetPriority.
type OptV1AdsGetPriority struct {
	Value V1AdsGetPriority
	Set   bool
}

// IsSet returns true if OptV1AdsGetPriority was set.
func (o OptV1AdsGetPriority) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptV1AdsGetPriority) Reset() {
	var v V1AdsGetPriority
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptV1AdsGetPriority) SetTo(v V1AdsGetPriority) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptV1AdsGetPriority) Get() (v V1AdsGetPriority, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptV1AdsGetPriority) Or(d V1AdsGetPriority) V1AdsGetPriority {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #
type Tg struct {
	// Идентификатор тг.
	ID int `json:"id"`
	// Название тг.
	Title string `json:"title"`
	// URL тг.
	URL url.URL `json:"url"`
}

// GetID returns the value of ID.
func (s *Tg) GetID() int {
	return s.ID
}

// GetTitle returns the value of Title.
func (s *Tg) GetTitle() string {
	return s.Title
}

// GetURL returns the value of URL.
func (s *Tg) GetURL() url.URL {
	return s.URL
}

// SetID sets the value of ID.
func (s *Tg) SetID(val int) {
	s.ID = val
}

// SetTitle sets the value of Title.
func (s *Tg) SetTitle(val string) {
	s.Title = val
}

// SetURL sets the value of URL.
func (s *Tg) SetURL(val url.URL) {
	s.URL = val
}

func (*Tg) v1AdminTgsIDPutRes() {}
func (*Tg) v1AdminTgsPostRes()  {}

// Ref: #
type TgPost struct {
	// Название тг.
	Title string `json:"title"`
	// URL тг.
	URL url.URL `json:"url"`
}

// GetTitle returns the value of Title.
func (s *TgPost) GetTitle() string {
	return s.Title
}

// GetURL returns the value of URL.
func (s *TgPost) GetURL() url.URL {
	return s.URL
}

// SetTitle sets the value of Title.
func (s *TgPost) SetTitle(val string) {
	s.Title = val
}

// SetURL sets the value of URL.
func (s *TgPost) SetURL(val url.URL) {
	s.URL = val
}

// Ref: #
type TgPut struct {
	// Название ссылки.
	Title OptString `json:"title"`
	// URL ссылки.
	URL OptURI `json:"url"`
}

// GetTitle returns the value of Title.
func (s *TgPut) GetTitle() OptString {
	return s.Title
}

// GetURL returns the value of URL.
func (s *TgPut) GetURL() OptURI {
	return s.URL
}

// SetTitle sets the value of Title.
func (s *TgPut) SetTitle(val OptString) {
	s.Title = val
}

// SetURL sets the value of URL.
func (s *TgPut) SetURL(val OptURI) {
	s.URL = val
}

// Ref: #
type TgsResp struct {
	Data []Tg `json:"data"`
	// Текущая страница.
	Page int `json:"page"`
	// Количество страниц.
	Pages int `json:"pages"`
	// Количество записей на странице.
	PerPage int `json:"per_page"`
}

// GetData returns the value of Data.
func (s *TgsResp) GetData() []Tg {
	return s.Data
}

// GetPage returns the value of Page.
func (s *TgsResp) GetPage() int {
	return s.Page
}

// GetPages returns the value of Pages.
func (s *TgsResp) GetPages() int {
	return s.Pages
}

// GetPerPage returns the value of PerPage.
func (s *TgsResp) GetPerPage() int {
	return s.PerPage
}

// SetData sets the value of Data.
func (s *TgsResp) SetData(val []Tg) {
	s.Data = val
}

// SetPage sets the value of Page.
func (s *TgsResp) SetPage(val int) {
	s.Page = val
}

// SetPages sets the value of Pages.
func (s *TgsResp) SetPages(val int) {
	s.Pages = val
}

// SetPerPage sets the value of PerPage.
func (s *TgsResp) SetPerPage(val int) {
	s.PerPage = val
}

func (*TgsResp) v1AdminTgsGetRes() {}

type V1AdminAdsGetBadRequest Error

func (*V1AdminAdsGetBadRequest) v1AdminAdsGetRes() {}

type V1AdminAdsGetNotFound Error

func (*V1AdminAdsGetNotFound) v1AdminAdsGetRes() {}

type V1AdminAdsGetUnauthorized Error

func (*V1AdminAdsGetUnauthorized) v1AdminAdsGetRes() {}

// V1AdminAdsIDDeleteNoContent is response for V1AdminAdsIDDelete operation.
type V1AdminAdsIDDeleteNoContent struct{}

func (*V1AdminAdsIDDeleteNoContent) v1AdminAdsIDDeleteRes() {}

type V1AdminAdsIDDeleteNotFound Error

func (*V1AdminAdsIDDeleteNotFound) v1AdminAdsIDDeleteRes() {}

type V1AdminAdsIDDeleteUnauthorized Error

func (*V1AdminAdsIDDeleteUnauthorized) v1AdminAdsIDDeleteRes() {}

type V1AdminAdsIDPutBadRequest Error

func (*V1AdminAdsIDPutBadRequest) v1AdminAdsIDPutRes() {}

type V1AdminAdsIDPutConflict Error

func (*V1AdminAdsIDPutConflict) v1AdminAdsIDPutRes() {}

type V1AdminAdsIDPutNotFound Error

func (*V1AdminAdsIDPutNotFound) v1AdminAdsIDPutRes() {}

type V1AdminAdsIDPutUnauthorized Error

func (*V1AdminAdsIDPutUnauthorized) v1AdminAdsIDPutRes() {}

type V1AdminAdsPostBadRequest Error

func (*V1AdminAdsPostBadRequest) v1AdminAdsPostRes() {}

type V1AdminAdsPostConflict Error

func (*V1AdminAdsPostConflict) v1AdminAdsPostRes() {}

type V1AdminAdsPostUnauthorized Error

func (*V1AdminAdsPostUnauthorized) v1AdminAdsPostRes() {}

type V1AdminColorsGetBadRequest Error

func (*V1AdminColorsGetBadRequest) v1AdminColorsGetRes() {}

type V1AdminColorsGetNotFound Error

func (*V1AdminColorsGetNotFound) v1AdminColorsGetRes() {}

type V1AdminColorsGetUnauthorized Error

func (*V1AdminColorsGetUnauthorized) v1AdminColorsGetRes() {}

type V1AdminColorsIDDeleteConflict Error

func (*V1AdminColorsIDDeleteConflict) v1AdminColorsIDDeleteRes() {}

// V1AdminColorsIDDeleteNoContent is response for V1AdminColorsIDDelete operation.
type V1AdminColorsIDDeleteNoContent struct{}

func (*V1AdminColorsIDDeleteNoContent) v1AdminColorsIDDeleteRes() {}

type V1AdminColorsIDDeleteNotFound Error

func (*V1AdminColorsIDDeleteNotFound) v1AdminColorsIDDeleteRes() {}

type V1AdminColorsIDDeleteUnauthorized Error

func (*V1AdminColorsIDDeleteUnauthorized) v1AdminColorsIDDeleteRes() {}

type V1AdminColorsIDPutBadRequest Error

func (*V1AdminColorsIDPutBadRequest) v1AdminColorsIDPutRes() {}

type V1AdminColorsIDPutConflict Error

func (*V1AdminColorsIDPutConflict) v1AdminColorsIDPutRes() {}

type V1AdminColorsIDPutNotFound Error

func (*V1AdminColorsIDPutNotFound) v1AdminColorsIDPutRes() {}

type V1AdminColorsIDPutUnauthorized Error

func (*V1AdminColorsIDPutUnauthorized) v1AdminColorsIDPutRes() {}

type V1AdminColorsPostBadRequest Error

func (*V1AdminColorsPostBadRequest) v1AdminColorsPostRes() {}

type V1AdminColorsPostConflict Error

func (*V1AdminColorsPostConflict) v1AdminColorsPostRes() {}

type V1AdminColorsPostUnauthorized Error

func (*V1AdminColorsPostUnauthorized) v1AdminColorsPostRes() {}

type V1AdminImagesGetBadRequest Error

func (*V1AdminImagesGetBadRequest) v1AdminImagesGetRes() {}

type V1AdminImagesGetNotFound Error

func (*V1AdminImagesGetNotFound) v1AdminImagesGetRes() {}

type V1AdminImagesGetUnauthorized Error

func (*V1AdminImagesGetUnauthorized) v1AdminImagesGetRes() {}

type V1AdminImagesIDDeleteConflict Error

func (*V1AdminImagesIDDeleteConflict) v1AdminImagesIDDeleteRes() {}

// V1AdminImagesIDDeleteNoContent is response for V1AdminImagesIDDelete operation.
type V1AdminImagesIDDeleteNoContent struct{}

func (*V1AdminImagesIDDeleteNoContent) v1AdminImagesIDDeleteRes() {}

type V1AdminImagesIDDeleteNotFound Error

func (*V1AdminImagesIDDeleteNotFound) v1AdminImagesIDDeleteRes() {}

type V1AdminImagesIDDeleteUnauthorized Error

func (*V1AdminImagesIDDeleteUnauthorized) v1AdminImagesIDDeleteRes() {}

type V1AdminImagesIDPutBadRequest Error

func (*V1AdminImagesIDPutBadRequest) v1AdminImagesIDPutRes() {}

type V1AdminImagesIDPutConflict Error

func (*V1AdminImagesIDPutConflict) v1AdminImagesIDPutRes() {}

type V1AdminImagesIDPutNotFound Error

func (*V1AdminImagesIDPutNotFound) v1AdminImagesIDPutRes() {}

type V1AdminImagesIDPutUnauthorized Error

func (*V1AdminImagesIDPutUnauthorized) v1AdminImagesIDPutRes() {}

type V1AdminImagesPostBadRequest Error

func (*V1AdminImagesPostBadRequest) v1AdminImagesPostRes() {}

type V1AdminImagesPostConflict Error

func (*V1AdminImagesPostConflict) v1AdminImagesPostRes() {}

type V1AdminImagesPostUnauthorized Error

func (*V1AdminImagesPostUnauthorized) v1AdminImagesPostRes() {}

type V1AdminTgsGetBadRequest Error

func (*V1AdminTgsGetBadRequest) v1AdminTgsGetRes() {}

type V1AdminTgsGetNotFound Error

func (*V1AdminTgsGetNotFound) v1AdminTgsGetRes() {}

type V1AdminTgsGetUnauthorized Error

func (*V1AdminTgsGetUnauthorized) v1AdminTgsGetRes() {}

type V1AdminTgsIDDeleteConflict Error

func (*V1AdminTgsIDDeleteConflict) v1AdminTgsIDDeleteRes() {}

// V1AdminTgsIDDeleteNoContent is response for V1AdminTgsIDDelete operation.
type V1AdminTgsIDDeleteNoContent struct{}

func (*V1AdminTgsIDDeleteNoContent) v1AdminTgsIDDeleteRes() {}

type V1AdminTgsIDDeleteNotFound Error

func (*V1AdminTgsIDDeleteNotFound) v1AdminTgsIDDeleteRes() {}

type V1AdminTgsIDDeleteUnauthorized Error

func (*V1AdminTgsIDDeleteUnauthorized) v1AdminTgsIDDeleteRes() {}

type V1AdminTgsIDPutBadRequest Error

func (*V1AdminTgsIDPutBadRequest) v1AdminTgsIDPutRes() {}

type V1AdminTgsIDPutConflict Error

func (*V1AdminTgsIDPutConflict) v1AdminTgsIDPutRes() {}

type V1AdminTgsIDPutNotFound Error

func (*V1AdminTgsIDPutNotFound) v1AdminTgsIDPutRes() {}

type V1AdminTgsIDPutUnauthorized Error

func (*V1AdminTgsIDPutUnauthorized) v1AdminTgsIDPutRes() {}

type V1AdminTgsPostBadRequest Error

func (*V1AdminTgsPostBadRequest) v1AdminTgsPostRes() {}

type V1AdminTgsPostConflict Error

func (*V1AdminTgsPostConflict) v1AdminTgsPostRes() {}

type V1AdminTgsPostUnauthorized Error

func (*V1AdminTgsPostUnauthorized) v1AdminTgsPostRes() {}

type V1AdsGetBadRequest Error

func (*V1AdsGetBadRequest) v1AdsGetRes() {}

type V1AdsGetNotFound Error

func (*V1AdsGetNotFound) v1AdsGetRes() {}

type V1AdsGetPriority int

const (
	V1AdsGetPriority1 V1AdsGetPriority = 1
	V1AdsGetPriority2 V1AdsGetPriority = 2
	V1AdsGetPriority3 V1AdsGetPriority = 3
)

// AllValues returns all V1AdsGetPriority values.
func (V1AdsGetPriority) AllValues() []V1AdsGetPriority {
	return []V1AdsGetPriority{
		V1AdsGetPriority1,
		V1AdsGetPriority2,
		V1AdsGetPriority3,
	}
}

type V1LogosGetBadRequest Error

func (*V1LogosGetBadRequest) v1LogosGetRes() {}

type V1LogosGetNotFound Error

func (*V1LogosGetNotFound) v1LogosGetRes() {}
